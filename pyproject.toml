[tool.poetry]
name = "u-iris.update-robotframework-projects"
version = "0.1.0"
description = "Mise à jour des projets robotframework à partir du template https://github.com/ugieiris/template-robotframework avec l'outil Copier"
authors = ["UDSI_TESTING <UDSI_TESTING@systeme-u.fr>"]
license = "Proprietary"
readme = "README.md"
homepage = "https://github.com/ugieiris/update-robotframework-projects"
repository = "https://github.com/ugieiris/update-robotframework-projects"
documentation = "https://github.com/ugieiris/update-robotframework-projects#README.md"
keywords = []
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
]
packages = [{include = "u_iris", from = "src"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ugieiris/update-robotframework-projects/issues"

[[tool.poetry.source]]
name = "py-releases"
url = "https://artifactory-iris.groupement.systeme-u.fr/artifactory/api/pypi/py-repo/simple"
priority = "default"

[tool.poetry.scripts]
update-robotframework-projects = "u_iris.update_robotframework_projects.cli:main"

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.3"
pydantic = {extras = ["dotenv"], version = "^2.6.4"}
cookiecutter = "^2.6.0"
copier = "^9.2.0"

[tool.poetry.dev-dependencies]
poethepoet = "^0.20.0"
pytest = "^7.3.1"
flake8 = "^6.0.0"
black = "^23.3.0"
safety = "^2.3.5"
isort = "^5.12.0"

[tool.isort]
profile = "black"
line_length = 120

[tool.black]
line-length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = ["unit"]

[tool.poe.tasks]
[tool.poe.tasks."lint"]
sequence = [
    "lint:flake8",
    "lint:safety",
    "lint:isort",
    "lint:black"
]
help = "Lint the python codebase with all the tools"
ignore_fail = "return_non_zero"

[tool.poe.tasks."lint:flake8"]
cmd = "flake8 ."
help = "Lint the python codebase to detect code smells or styling issues with flake8"

[tool.poe.tasks."lint:safety"]
cmd = "safety check --full-report"
help = "Check the python dependencies to find vulnerabilities"

[tool.poe.tasks."lint:isort"]
cmd = "isort --color ."
help = "Lint the python codebase for incorrect imports with isort"

[tool.poe.tasks."lint:black"]
cmd = "black --check --diff --color ."
help = "Lint the python codebase to detect styling issues with black"

[tool.poe.tasks."format:black"]
cmd = "black --color ."
help = "Format the python codebase with black"

[tool.poe.tasks."test:unit"]
cmd = "pytest"
help = "Run unit tests"

[tool.poe.tasks."test:integration"]
cmd = "echo 'no integration tests'"
help = "Run integration tests"

[tool.poe.tasks."deploy:prepare"]
cmd = "poetry export --format requirements.txt --output requirements.txt"
help = "Prepare the deployment unit: generate requirements.txt"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
